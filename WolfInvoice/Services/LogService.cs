namespace WolfInvoice.Services;

using Serilog;
using WolfInvoice.Enums;

/// <summary>
/// Service for logging user and customer actions.
/// </summary>
public class LogService
{
    /// <summary>
    /// Logs a user action performed on the system.
    /// </summary>
    /// <param name="userId">The unique identifier of the user performing the action.</param>
    /// <param name="action">The action performed by the user.</param>
    public static void LogUserAction(string userId, UserActions action) =>
        Log.Information($"User with ID {userId} {action.ToString().ToLower()}");

    /// <summary>
    /// Logs a customer action performed by a user.
    /// </summary>
    /// <param name="customerId">The ID of the customer the action was performed on.</param>
    /// <param name="userId">The ID of the user who performed the action.</param>
    /// <param name="action">The action performed on the customer.</param>
    public static void LogCustomerAction(
        string customerId,
        string userId,
        CustomerActions action
    ) =>
        Log.Information(
            $"Customer with ID {customerId} {action.ToString().ToLower()} by User with ID {userId}"
        );

    /// <summary>
    /// Log message for invoice-related actions.
    /// </summary>
    /// <param name="invoiceId">The ID of the invoice the action is performed on.</param>
    /// <param name="userId">The ID of the user who performed the action.</param>
    /// <param name="action">The action performed on the invoice.</param>
    public static void LogInvoiceAction(string invoiceId, string userId, InvoiceActions action) =>
        Log.Information(
            $"Invoice with ID {invoiceId} {action.ToString().ToLower()} by User with ID {userId}."
        );

    /// <summary>
    /// Log message for invoice-related actions.
    /// </summary>
    /// <param name="invoiceId">The ID of the invoice the action is performed on.</param>
    /// <param name="userId">The ID of the user who performed the action.</param>
    /// <param name="status">The status performed on the invoice.</param>
    public static void LogInvoiceAction(string invoiceId, string userId, InvoiceStatus status) =>
        Log.Information(
            $"Invoice with ID {invoiceId} {status.ToString().ToLower()} by User with ID {userId}."
        );

    /// <summary>
    /// Log message for report-related actions.
    /// </summary>
    /// <param name="userId">The ID of the user who generated the report.</param>
    /// <param name="action">The report action performed.</param>
    /// <returns>The log message.</returns>
    public static void LogReportAction(string userId, ReportActions action) =>
        Log.Information($"Report {action.ToString().ToLower()} generated by User with ID {userId}");
}
